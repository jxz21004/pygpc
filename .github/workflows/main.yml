name: Build 

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10]
        include:
          - python-version: 3.8
            cibw-string: "cp38-*"
          - python-version: 3.9
            cibw-string: "cp39-*"
          - python-version: 3.10
            cibw-string: "cp310-*"
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install Cython matplotlib seaborn cibuildwheel twine
        pip install -r requirements.txt
        pip install .
    - name: Test with unittest
      run: |
        cd tests
        python -m unittest
        cd .. 
    - name: Build with cibuildwheel
      run: |
        python -m cibuildwheel --output-dir wheelhouse
        ls wheelhouse/
      env:
        CIBW_MANYLINUX_X86_64_IMAGE: "manylinux2014"
        CIBW_BEFORE_BUILD: "pip install numpy"
        CIBW_BUILD: ${{ matrix.cibw-string }}
        CIBW_SKIP: "*-musllinux_*"
    - name: Upload with twine
      if: "contains(github.event.head_commit.message, 'PyPI')"
      run: |
        python -m twine upload wheelhouse/*.whl
      env:
        TWINE_PASSWORD: ${{ secrets.twine_password }}
        TWINE_USERNAME: ${{ secrets.twine_username }}

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10]
        include:
          - python-version: 3.8
            cibw-string: "cp38-*"
          - python-version: 3.9
            cibw-string: "cp39-*"
          - python-version: 3.10
            cibw-string: "cp310-*"
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install Cython matplotlib seaborn cibuildwheel twine
        pip install -r requirements.txt
        pip install .
    - name: Test with unittest
      run: |
        cd tests
        python -m unittest
        cd .. 
    - name: Build with cibuildwheel
      run: |
        python -m cibuildwheel --output-dir wheelhouse
        ls wheelhouse/
      env:
        CIBW_BEFORE_BUILD: "pip install numpy"
        CIBW_BUILD: ${{ matrix.cibw-string }} 
    - name: Upload with twine
      if: "contains(github.event.head_commit.message, 'PyPI')"
      run: |
        python -m twine upload wheelhouse/*.whl
      env:
        TWINE_PASSWORD: ${{ secrets.twine_password }}
        TWINE_USERNAME: ${{ secrets.twine_username }}

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10]
        include:
          - python-version: 3.8
            cibw-string: "cp38-*"
          - python-version: 3.9
            cibw-string: "cp39-*"
          - python-version: 3.10
            cibw-string: "cp310-*"
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install Cython matplotlib seaborn cibuildwheel twine
        pip install -r requirements.txt
        CC=gcc-9 CXX=g++-9 pip install .
    - name: Test with unittest
      run: |
        cd tests
        python -m unittest
        cd .. 
    - name: Build with cibuildwheel
      run: |
        python -m cibuildwheel --output-dir wheelhouse
        ls wheelhouse/
      env:
        CIBW_BEFORE_BUILD: "pip install numpy"
        CIBW_BUILD: ${{ matrix.cibw-string }} 
        CIBW_REPAIR_WHEEL_COMMAND: "delocate-listdeps {wheel} && delocate-wheel -w {dest_dir} {wheel}"
        CC: gcc-9
        CXX: g++-9
    - name: Upload with twine
      if: "contains(github.event.head_commit.message, 'PyPI')"
      run: |
        python -m twine upload wheelhouse/*.whl
      env:
        TWINE_PASSWORD: ${{ secrets.twine_password }}
        TWINE_USERNAME: ${{ secrets.twine_username }}
